# Оптимизированные параметры ядра для VLESS REALITY VPN-сервера
# Целевая система: 1 CPU, 2GB RAM, 20 пользователей, Ubuntu 24.04
# ===================================================================

# --- Управление Ресурсами и Памятью ---

# Стратегия использования свопа. Значение 30 (вместо 60 по умолчанию)
# заставляет ядро предпочитать сброс файлового кэша вместо выгрузки
# памяти приложений в своп. Критично для производительности VPN-сервера.
vm.swappiness = 10

# --- Оптимизация Производительности TCP ---

# Установка планировщика пакетов Fair Queue (fq).
# Обязательное условие для корректной работы BBR, так как fq
# обеспечивает необходимый BBR механизм "пейсинга" (pacing).
net.core.default_qdisc = fq

# Включение алгоритма контроля перегрузки BBR от Google.
# Улучшает пропускную способность и снижает задержку на нестабильных сетях.
net.ipv4.tcp_congestion_control = bbr

# Включение TCP Fast Open (TFO). Значение 3 (1+2) включает TFO
# как для клиентских, так и для серверных соединений, уменьшая задержку
# при установке повторных TCP-сессий.
net.ipv4.tcp_fastopen = 3

# Отключение TCP Timestamps для уменьшения уникальности отпечатка.
# Это приоритет для маскировки, несмотря на небольшое влияние на производительность.
net.ipv4.tcp_timestamps = 0

# Настройки TCP Keepalive для своевременного обнаружения "мертвых" соединений.
# Время простоя перед первой пробой (300с = 5 мин).
net.ipv4.tcp_keepalive_time = 300
net.ipv4.tcp_fin_timeout = 15

# Включить режим низкой задержки TCP
net.ipv4.tcp_low_latency = 1

# Маскировка отпечатка ОС путем имитации TTL Windows-сервера.
net.ipv4.ip_default_ttl = 128

# Включить масштабирование TCP окна
net.ipv4.tcp_window_scaling = 1

# Оптимизация для высокоскоростных соединений
net.ipv4.tcp_adv_win_scale = 1
